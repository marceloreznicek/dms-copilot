<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= pageTitle %></title>

    <link rel="stylesheet" href="/css/styles.css" />
    <link rel="stylesheet" href="/css/form.css" />
    <link rel="stylesheet" href="/css/header.css" />
    <link rel="stylesheet" href="/css/sidebar.css" />
    <link rel="stylesheet" href="/css/loadingContainer.css" />

    <link rel="icon" type="image/x-icon" href="/images/torch.ico" />

    <script defer src="/js/loadingContainer.js"></script>
    <script defer src="/js/header.js"></script>

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=AW-16853664559"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag('js', new Date());
      gtag('config', 'AW-16853664559');
    </script>
  </head>
  <body>
    <%- include('partials/header', { userAvatar: userAvatar, username: username }) %>

    <div class="main-layout">
      <%- include('partials/loadingContainer') %> <%- include('partials/sidebar', { campaignList:
      campaignList }) %>

      <div class="main-content">
        <div class="action-buttons-container">
          <a class="action-button" href="/campaigns?source=center_button_form"
            >BROWSE 200+ FREE CAMPAIGNS</a
          >
        </div>

        <div class="form-container">
          <h1 class="formTitle">Campaign Generator</h1>

          <form action="/generate-one-shot" method="POST" class="generator-form">
            <div class="step-progress">
              <div class="progress-bar"></div>
              <div class="step active" data-step="1">
                1
                <span class="step-label">World Building</span>
              </div>
              <div class="step" data-step="2">
                2
                <span class="step-label">Plot Elements</span>
              </div>
            </div>

            <!-- World Building Section -->
            <div class="form-section active" data-section="1">
              <div class="section-container">
                <h2 class="section-title">World Building</h2>
                <% questions.filter(q => q.type === 'worldbuilding').forEach(question => { %>
                <div class="question-container">
                  <h3 class="question-title"><%= question.question %></h3>
                  <div class="options-grid">
                    <% if (question.multiSelect) { %> <% question.options.forEach(option => { %>
                    <label class="option-label">
                      <input type="checkbox" name="<%= question.id %>[]" value="<%= option %>" />
                      <span class="option-text"><%= option %></span>
                    </label>
                    <% }); %> <% } else { %> <% question.options.forEach(option => { %>
                    <label class="option-label">
                      <input type="radio" name="<%= question.id %>" value="<%= option %>" />
                      <span class="option-text"><%= option %></span>
                    </label>
                    <% }); %> <% } %>
                  </div>
                </div>
                <% }); %>
              </div>
            </div>

            <!-- Plot Elements Section -->
            <div class="form-section" data-section="2">
              <div class="section-container">
                <h2 class="section-title">Plot Elements</h2>
                <% questions.filter(q => q.type === 'plot').forEach(question => { %>
                <div class="question-container">
                  <h3 class="question-title"><%= question.question %></h3>
                  <div class="options-grid">
                    <% if (question.multiSelect) { %> <% question.options.forEach(option => { %>
                    <label class="option-label">
                      <input type="checkbox" name="<%= question.id %>[]" value="<%= option %>" />
                      <span class="option-text"><%= option %></span>
                    </label>
                    <% }); %> <% } else { %> <% question.options.forEach(option => { %>
                    <label class="option-label">
                      <input type="radio" name="<%= question.id %>" value="<%= option %>" />
                      <span class="option-text"><%= option %></span>
                    </label>
                    <% }); %> <% } %>
                  </div>
                </div>
                <% }); %>

                <div class="question-container">
                  <h3 class="question-title">Additional Plot Comments</h3>
                  <textarea
                    name="plotComments"
                    class="comment-textarea"
                    placeholder="Add any specific plot elements, twists, or story elements you'd like to include..."
                    rows="4"
                  ></textarea>
                </div>
              </div>
            </div>

            <!-- Review Section -->
            <div class="form-section" data-section="3">
              <div class="section-container">
                <h2 class="section-title">Review Your Choices</h2>
                <div id="review-content" class="question-container">
                  <!-- Will be populated by JavaScript -->
                </div>
              </div>
            </div>

            <div class="navigation-buttons">
              <button type="button" class="nav-button" id="prevBtn" disabled>Previous</button>
              <button type="button" class="nav-button" id="nextBtn">Next</button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', function () {
        const form = document.querySelector('.generator-form');
        const sections = document.querySelectorAll('.form-section');
        const steps = document.querySelectorAll('.step');
        const progressBar = document.querySelector('.progress-bar');
        const prevBtn = document.getElementById('prevBtn');
        const nextBtn = document.getElementById('nextBtn');
        let currentStep = 1;

        function updateStep(step) {
          // Update sections visibility
          sections.forEach((section) => {
            section.classList.remove('active');
            if (section.dataset.section == step) {
              section.classList.add('active');
            }
          });

          // Update steps styling
          steps.forEach((stepEl, index) => {
            if (index + 1 < step) {
              stepEl.classList.add('completed');
              stepEl.classList.remove('active');
            } else if (index + 1 === step) {
              stepEl.classList.add('active');
              stepEl.classList.remove('completed');
            } else {
              stepEl.classList.remove('completed', 'active');
            }
          });

          // Update progress bar
          const progress = ((step - 1) / (steps.length - 1)) * 100;
          progressBar.style.width = `${progress}%`;

          // Update buttons
          prevBtn.disabled = step === 1;
          if (step === steps.length) {
            nextBtn.textContent = 'Submit';
          } else {
            nextBtn.textContent = 'Next';
          }

          // If on review step, populate review content
          if (step === steps.length) {
            populateReview();
          }
        }

        function populateReview() {
          const reviewContent = document.getElementById('review-content');
          const formData = new FormData(form);
          let reviewHTML = '';

          for (let [key, value] of formData.entries()) {
            if (value && value.trim() !== '') {
              reviewHTML += `
                <div class="review-item">
                  <h4 style="color: #a18fff; margin-bottom: 0.5rem;">${key}</h4>
                  <p style="color: #e2e2f5; margin-bottom: 1rem;">${value}</p>
                </div>
              `;
            }
          }

          reviewContent.innerHTML = reviewHTML;
        }

        prevBtn.addEventListener('click', () => {
          if (currentStep > 1) {
            currentStep--;
            updateStep(currentStep);
          }
        });

        nextBtn.addEventListener('click', () => {
          if (currentStep < steps.length) {
            currentStep++;
            updateStep(currentStep);
            const formContainer = document.querySelector('.form-container');
            formContainer.scrollIntoView({ behavior: 'smooth', block: 'start' });
          } else {
            if (!form.checkValidity()) {
              form.reportValidity();
              return;
            }

            // If form is valid, show loading screen and let the form submit naturally
            const loadingContainer = document.getElementById('loadingContainer');
            loadingContainer.classList.add('loading-active');
            handleFormSubmission();
            form.submit();
          }
        });

        // Initialize first step
        updateStep(1);
      });

      // Function to handle form submission and progress bar
      function handleFormSubmission() {
        const progressBar = document.querySelector('.loading-progress-bar');

        let progress = 0;
        const progressInterval = setInterval(() => {
          progress += 5;
          progressBar.style.width = `${progress}%`;

          if (progress >= 100) {
            clearInterval(progressInterval);
          }
        }, 1000);
      }
    </script>
  </body>
</html>
